package pegSolitaire;

public class PegSolitaire {
	

public static void createMovedirs (int [][] board){
	
	int i;
	int j;
	
	int [][] Movedir = new int[board.length][board[0].length];
	
	//Up=1, Right=10, Down=100, Left= 1000
	
    int d;
    // testing UP, RIGHT, DOWN, LEFT
    int dx[]={0,1,0,-1};
    int dy[]={-1,0,1,0};

	
	for (i=1; i<=board.length; i++){
		for (j=1; j<=board[0].length; j++){
			
			if (board[i][j] == -1)
				Movedir[i][j]=0;
			
			else 
				
				//test surrounding
		        for (d=0;d<=3;d++)
		        {
		        	if(board[i+2*dy[d]][j+2*dx[d]] == 0 || board[i+2*dy[d]][j+2*dx[d]] == 1)
		        		
		        		switch(d){
		        		case 0: Movedir [i][j] +=1;
		        		case 1: Movedir [i][j] +=10;
		        		case 2: Movedir [i][j] +=100;
		        		case 3: Movedir [i][j] +=1000;
		        		default: System.out.println ("Could not assign value to Movedir");
		        		}
		        	
		        	else Movedir [i][j] += 0;
		       
		        }

		}
	}
	
	
}

public static void main(String[] args){
	int [][] board= new int[][]{
			{0, 0, 1, 1, 1, 0, 0},
			{0, 0, 1, 1, 1, 0, 0},
			{1, 1, 1, 1, 1, 1, 1},
			{1, 1, 1, 1, 1, 1, 1},
			{1, 1, 1, 1, 1, 1, 1},
			{0, 0, 1, 1, 1, 0, 0},
			{0, 0, 1, 1, 1, 0, 0}
			};
	
	PegSolitaire.createMovedirs (board);
	
}
}
